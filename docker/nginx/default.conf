map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}

server {
    listen 80;
    server_name _;
    root /var/www/public;
    index index.html index.php;

    access_log /var/log/nginx/access.log;
    error_log  /var/log/nginx/error.log;

    # ---------- WebSocket por reverse proxy ----------
    location /ws {
        proxy_pass http://ws:8080;          # nombre del servicio del WS en docker-compose
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade; 
        # Si tu Nginx no acepta el `map` de arriba, usa en su lugar:
        # proxy_set_header Connection "Upgrade";

        proxy_set_header Host $host;
        proxy_read_timeout 300s;
        proxy_send_timeout 300s;
    }

    location /assets/ {
        try_files $uri =404;
    }

    location /api/ {
        try_files $uri =404;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param SCRIPT_NAME $fastcgi_script_name;
        fastcgi_pass php:9000;   # si tu servicio se llama 'php'; usa 'neix-php:9000' si as√≠ se llama
    }

    location ~ \.php$ {
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param SCRIPT_NAME $fastcgi_script_name;
        fastcgi_pass php:9000;   # idem comentario de arriba
    }

    location / {
        try_files $uri /index.html;
    }
}
